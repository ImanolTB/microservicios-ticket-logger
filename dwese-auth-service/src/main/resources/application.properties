spring.application.name=dwese-auth-service


spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=${DB_DRIVER}
# Configuracin de Hibernate y JPA
# Define cmo Hibernate gestiona la creacin y actualizacin del esquema de la base de datos
# "none" no actualiza la base de datos de forma automatica y se deja la gestin manual en schema.sql y data.sql
spring.jpa.hibernate.ddl-auto=none
# Muestra las consultas SQL generadas en la consola
spring.jpa.show-sql=true
# Formatea las consultas SQL para que sean mas legibles en la consola
spring.jpa.properties.hibernate.format_sql=true
# Dialecto especfico de Hibernate para MariaDB (es compatible con MySQL)
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
# Inicializacin de la base de datos
# Esta propiedad asegura que Spring Boot ejecuta los archivos la estrucutra (schema.sql) y de carga de datos (data.sql) al inicio
spring.sql.init.mode=always
# Configuracin de los logs del datasource
# Muestra detalles adicionales sobre la conexin a la base de datos
logging.level.org.springframework.jdbc.datasource.DataSourceTransactionManager=ERROR
# Nmero mximo de conexiones que puede abrir el pool de conexiones
spring.datasource.hikari.maximum-pool-size=10


# Clave secreta para generar el token
jwt.secret=${JWT_TOKEN}
# Ruta al archivo del keystore (leda desde la variable de entorno JWT_KEYSTORE_PATH)
jwt.keystore.path=${JWT_KEYSTORE_PATH}
# Contrasea del keystore (leda desde la variable de entorno JWT_KEYSTORE_PASSWORD)
jwt.keystore.password=${JWT_KEYSTORE_PASSWORD}
# Alias del par de claves dentro del keystore (ledo desde la variable de entorno JWT_KEYSTORE_ALIAS)
jwt.keystore.alias=${JWT_KEYSTORE_ALIAS}


# Dominios permitidos para CORS
cors.allowed-origins=${CORS_ALLOWED-ORIGINS}
# URLs internas de los microservicios (Docker Compose usa los nombres de los servicios como host)
microservice.auth.url=http://auth-service:8081
microservice.api.url=http://ticket-logger-api:8083


# Configuracin de rutas en API Gateway


## RUTA: Servicio de autenticacioon (auth-service)
spring.cloud.gateway.routes[0].id=auth-service
spring.cloud.gateway.routes[0].uri=${microservice.auth.url}
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/v1/auth/**

## RUTA: Servicio principal de la aplicacion (ticket-logger-api)
spring.cloud.gateway.routes[1].id=ticket-logger-api
spring.cloud.gateway.routes[1].uri=${microservice.api.url}
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/v1/ticket-logger/**